name: Release and Publish to npm

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Check if version is already published
        id: version-check
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          NPM_VIEW=$(npm view ${{ github.event.repository.name }}@$PKG_VERSION version || true)
          echo "Current version: $PKG_VERSION"
          echo "Published version: $NPM_VIEW"
          if [ "$PKG_VERSION" = "$NPM_VIEW" ]; then
            echo "Version $PKG_VERSION is already published. Skipping publish."
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.version-check.outputs.should_publish == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --provenance --access public

      - name: Create and push git tag for new version
        if: steps.version-check.outputs.should_publish == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v$PKG_VERSION
          git push origin v$PKG_VERSION
