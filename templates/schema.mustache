// This file is auto-generated by zod-pg. Do not edit this file directly.

import { z } from 'zod';
{{#hasJsonSchemaImports}}
import { {{#jsonSchemaImports}}{{name}}{{^last}}, {{/last}}{{/jsonSchemaImports}} } from '{{{jsonSchemaImportLocation}}}';
{{/hasJsonSchemaImports}}
{{#enums}}
export const {{constantName}} = [{{#values}}'{{value}}'{{^last}}, {{/last}}{{/values}}] as const;
{{/enums}}
{{#description}}

/**
 * {{{description}}}
 */
{{/description}}
export const {{tableReadSchemaName}} = z.object({
{{#readableColumns}}
    /**
    * dataType: {{dataType}}
    * defaultValue: {{{defaultValue}}}
    */
    {{name}}: {{{renderedReadType}}},
{{/readableColumns}}
}).transform(data => ({
{{#readableColumns}}
    {{propertyName}}: {{#renderedReadTransform}}data.{{name}}{{/renderedReadTransform}},
{{/readableColumns}}
}));

type TableReadRecord = z.output<typeof {{tableReadSchemaName}}>;
{{#isWritable}}
{{#description}}

/**
 * {{{description}}} - Insert schema
 */
{{/description}}
const TableWriteSchema = z.object({
{{#writableColumns}}
    /**
    * dataType: {{dataType}}
    * defaultValue: {{{defaultValue}}}
    */
    {{propertyName}}: {{{renderedWriteType}}},
{{/writableColumns}}
});
{{#description}}

/**
 * {{{description}}} - Insert schema
 */
{{/description}}
export const {{tableInsertSchemaName}} = TableWriteSchema.transform(data => ({
{{#writableColumns}}
    {{name}}: {{#renderedWriteTransform}}data.{{propertyName}}{{/renderedWriteTransform}},
{{/writableColumns}}
}));
{{#description}}

/**
 * {{{description}}} - Update schema
 */
{{/description}}
export const {{tableUpdateSchemaName}} = TableWriteSchema.partial().transform(data => ({
{{#writableColumns}}
    {{name}}: {{#renderedWriteTransform}}data.{{propertyName}}{{/renderedWriteTransform}},
{{/writableColumns}}
}));

type TableInsertRecord = z.input<typeof {{tableInsertSchemaName}}>;
{{/isWritable}}
{{#enums}}
export type {{typeName}} = (typeof {{constantName}})[number];
{{/enums}}

/**
* Represents a database record from the "{{schemaName}}.{{tableName}}" {{type}}.
*/
export interface {{tableReadRecordName}} {
{{#readableColumns}}
{{#description}}
    /**
     * {{{description}}}
     */
{{/description}}
    {{propertyName}}: TableReadRecord['{{propertyName}}'];
{{/readableColumns}}
}
{{#isWritable}}

/**
* Represents an insertable database record from the "{{schemaName}}.{{tableName}}" table.
*/
export interface {{tableInsertRecordName}} {
{{#writableColumns}}
    /**
    {{#description}}* {{{description}}}
    {{/description}}{{#maxLen}}* @maxLen: {{maxLen}}
    {{/maxLen}}{{#defaultValue}}* @default: {{{defaultValue}}}
    {{/defaultValue}}{{#isDeprecated}}* @deprecated {{isDeprecatedReason}}
    {{/isDeprecated}}*/
    {{propertyName}}{{#isNullable}}?{{/isNullable}}: TableInsertRecord['{{propertyName}}'];
{{/writableColumns}}
}

/**
* Represents an updateable database record from the "{{schemaName}}.{{tableName}}" table.
*/
export type {{tableUpdateRecordName}} = Partial<{{tableInsertRecordName}}>;
{{/isWritable}}