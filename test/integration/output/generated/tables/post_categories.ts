// This file is auto-generated by zod-pg. Do not edit this file directly.

import { z } from 'zod';

export const PostCategoriesTableSchema = z.object({
    /**
    * dataType: int4
    * defaultValue: 
    */
    post_id: z.int(),
    /**
    * dataType: int4
    * defaultValue: 
    */
    category_id: z.int(),
}).transform(data => ({
    postId: data.post_id,
    categoryId: data.category_id,
}));

type TableReadRecord = z.output<typeof PostCategoriesTableSchema>;

const TableWriteSchema = z.object({
    /**
    * dataType: int4
    * defaultValue: 
    */
    postId: z.int(),
    /**
    * dataType: int4
    * defaultValue: 
    */
    categoryId: z.int(),
});

export const PostCategoriesTableInsertSchema = TableWriteSchema.transform(data => ({
    post_id: data.postId,
    category_id: data.categoryId,
}));

export const PostCategoriesTableUpdateSchema = TableWriteSchema.partial().transform(data => ({
    post_id: data.postId,
    category_id: data.categoryId,
}));

type TableInsertRecord = z.input<typeof PostCategoriesTableInsertSchema>;

/**
* Represents a database record from the "public.post_categories" table.
*/
export interface PostCategoryRecord {
    /**
     * ID of the post
     */
    postId: TableReadRecord['postId'];
    /**
     * ID of the category
     */
    categoryId: TableReadRecord['categoryId'];
}

/**
* Represents an insertable database record from the "public.post_categories" table.
*/
export interface PostCategoryInsertRecord {
    /**
    * ID of the post
    */
    postId: TableInsertRecord['postId'];
    /**
    * ID of the category
    */
    categoryId: TableInsertRecord['categoryId'];
}

/**
* Represents an updateable database record from the "public.post_categories" table.
*/
export type PostCategoryUpdateRecord = Partial<PostCategoryInsertRecord>;
