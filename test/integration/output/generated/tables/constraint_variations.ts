// This file is auto-generated by zod-pg. Do not edit this file directly.

import { z } from 'zod';

export const CONSTRAINT_VARIATION_ANIMALS = ['cat','dog','bird','fish',] as const;
export const CONSTRAINT_VARIATION_FRUITS = ['apple','banana','orange','grape',] as const;
export const CONSTRAINT_VARIATION_VEHICLES = ['car','truck','motorcycle','bicycle',] as const;
export const CONSTRAINT_VARIATION_LANGUAGES = ['en','es','fr','de','it',] as const;
export const CONSTRAINT_VARIATION_ACTIVE_STATUSES = ['true','false',] as const;

export const ConstraintVariationsTableSchema = z.object({
    /**
    * dataType: int4
    * defaultValue: nextval('constraint_variations_id_seq'::regclass)
    */
    id: z.int(),
    /**
    * dataType: varchar
    * defaultValue: 
    */
    animal: z.enum(CONSTRAINT_VARIATION_ANIMALS).nullable(),
    /**
    * dataType: text
    * defaultValue: 
    */
    fruit: z.enum(CONSTRAINT_VARIATION_FRUITS).nullable(),
    /**
    * dataType: varchar
    * defaultValue: 
    */
    vehicle: z.enum(CONSTRAINT_VARIATION_VEHICLES).nullable(),
    /**
    * dataType: bpchar
    * defaultValue: 
    */
    language: z.enum(CONSTRAINT_VARIATION_LANGUAGES).nullable(),
    /**
    * dataType: int2
    * defaultValue: 
    */
    rating: z.int().nullable(),
    /**
    * dataType: bool
    * defaultValue: 
    */
    active_status: z.enum(CONSTRAINT_VARIATION_ACTIVE_STATUSES).nullable(),
    /**
    * dataType: timestamptz
    * defaultValue: now()
    */
    created_at: z.date().nullable(),
}).transform(data => ({
    id: data.id,
    animal: data.animal ?? undefined,
    fruit: data.fruit ?? undefined,
    vehicle: data.vehicle ?? undefined,
    language: data.language ?? undefined,
    rating: data.rating ?? undefined,
    activeStatus: data.active_status ?? undefined,
    createdAt: data.created_at ?? undefined,
}));

const TableWriteSchema = z.object({
    /**
    * dataType: varchar
    * defaultValue: 
    */
    animal: z.enum(CONSTRAINT_VARIATION_ANIMALS).nullish(),
    /**
    * dataType: text
    * defaultValue: 
    */
    fruit: z.enum(CONSTRAINT_VARIATION_FRUITS).nullish(),
    /**
    * dataType: varchar
    * defaultValue: 
    */
    vehicle: z.enum(CONSTRAINT_VARIATION_VEHICLES).nullish(),
    /**
    * dataType: bpchar
    * defaultValue: 
    */
    language: z.enum(CONSTRAINT_VARIATION_LANGUAGES).nullish(),
    /**
    * dataType: int2
    * defaultValue: 
    */
    rating: z.int().nullish(),
    /**
    * dataType: bool
    * defaultValue: 
    */
    activeStatus: z.enum(CONSTRAINT_VARIATION_ACTIVE_STATUSES).nullish(),
    /**
    * dataType: timestamptz
    * defaultValue: now()
    */
    createdAt: z.date().nullish(),
});

export const ConstraintVariationsTableInsertSchema = TableWriteSchema.transform(data => ({
    animal: data.animal,
    fruit: data.fruit,
    vehicle: data.vehicle,
    language: data.language,
    rating: data.rating,
    active_status: data.activeStatus,
    created_at: data.createdAt,
}));

export const ConstraintVariationsTableUpdateSchema = TableWriteSchema.partial().transform(data => ({
    animal: data.animal,
    fruit: data.fruit,
    vehicle: data.vehicle,
    language: data.language,
    rating: data.rating,
    active_status: data.activeStatus,
    created_at: data.createdAt,
}));

type TableReadRecord = z.output<typeof ConstraintVariationsTableSchema>;
type TableInsertRecord = z.input<typeof ConstraintVariationsTableInsertSchema>;

export type ConstraintVariationAnimal = (typeof CONSTRAINT_VARIATION_ANIMALS)[number];export type ConstraintVariationFruit = (typeof CONSTRAINT_VARIATION_FRUITS)[number];export type ConstraintVariationVehicle = (typeof CONSTRAINT_VARIATION_VEHICLES)[number];export type ConstraintVariationLanguage = (typeof CONSTRAINT_VARIATION_LANGUAGES)[number];export type ConstraintVariationActiveStatus = (typeof CONSTRAINT_VARIATION_ACTIVE_STATUSES)[number];

/**
* Represents a database record from the "public.constraint_variations" table.
*/
export interface ConstraintVariationRecord {
    /**
     * Primary key for constraint variations table
     */
    id: TableReadRecord['id'];
    /**
     * Type of animal
     */
    animal: TableReadRecord['animal'];
    /**
     * Type of fruit
     */
    fruit: TableReadRecord['fruit'];
    /**
     * Type of vehicle
     */
    vehicle: TableReadRecord['vehicle'];
    /**
     * Language code
     */
    language: TableReadRecord['language'];
    /**
     * Rating score (1-5)
     */
    rating: TableReadRecord['rating'];
    /**
     * Whether the item is active
     */
    activeStatus: TableReadRecord['activeStatus'];
    /**
     * Timestamp when record was created
     */
    createdAt: TableReadRecord['createdAt'];
}

/**
* Represents an insertable database record from the "public.constraint_variations" table.
*/
export interface ConstraintVariationInsertRecord {
    /**
    * Type of animal
    * @maxLen: 20
    */
    animal?: TableInsertRecord['animal'];
    /**
    * Type of fruit
    */
    fruit?: TableInsertRecord['fruit'];
    /**
    * Type of vehicle
    * @maxLen: 15
    */
    vehicle?: TableInsertRecord['vehicle'];
    /**
    * Language code
    * @maxLen: 2
    */
    language?: TableInsertRecord['language'];
    /**
    * Rating score (1-5)
    */
    rating?: TableInsertRecord['rating'];
    /**
    * Whether the item is active
    */
    activeStatus?: TableInsertRecord['activeStatus'];
    /**
    * Timestamp when record was created
    * @default: now()
    */
    createdAt?: TableInsertRecord['createdAt'];
}

/**
* Represents an updateable database record from the "public.constraint_variations" table.
*/
export type ConstraintVariationUpdateRecord = Partial<ConstraintVariationInsertRecord>;
